{"version":3,"sources":["../../../src/components/Form/FormLayout.js"],"names":["FormLayout","inner","key","cols","props","block","ele","labelCol","labelSpan","Math","ceil","React","cloneElement","span","wrapperCol","children","Children","map","item","idx","nowarp","type","Symbol","idxInner","renderChildren","_","isArray","compact","gutter","className","items","warpItems","PureComponent","propTypes","PropTypes","number","bool"],"mappings":"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","sourcesContent":["/**\r\n * FormLayout\r\n * Created by pengj on 2018-4-29.\r\n */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Col, Row } from \"antd\";\r\nimport _ from \"lodash\";\r\n\r\n/**\r\n * 表单局部组件, 用于提供多行布局表单\r\n *\r\n * 直接放入FormField\r\n *```html\r\n * <FormLayout compact={true} cols={4}>\r\n *   <FormField\r\n *   label={\"Test Label1111111111111\"}\r\n *   name={\"test\"}\r\n *   required\r\n *   >\r\n *      <Input/>\r\n *   </FormField>\r\n * </FormLayout>\r\n * ```\r\n *\r\n * 放入Fragment包裹的元素, 会被展开\r\n *```html\r\n * <FormLayout compact={true} cols={4}>\r\n *    <Fragment></Fragment>\r\n * </FormLayout>\r\n * ```\r\n *\r\n * 下级元素存在block属性时, 会展开为单行, 建议用cols=2 | 4 的时候使用\r\n *```html\r\n * <FormLayout compact={true} cols={4}>\r\n *   <FormField block label={\"Test Label11111111111\"} name={\"test\"} required>\r\n *     <Input/>\r\n *   </FormField>\r\n *   <FormField label={\"Test Label22222222222\"} name={\"test2\"} required>\r\n *     <Input/>\r\n *   </FormField>\r\n *   <FormField label={\"Test Label22222222222\"} name={\"test2\"} required>\r\n *     <Input/>\r\n *   </FormField>\r\n * </FormLayout>\r\n * ```\r\n */\r\nexport default class FormLayout extends React.PureComponent {\r\n  static defaultProps = {\r\n    cols: 1,\r\n    compact: false,\r\n    gutter: 8,\r\n  };\r\n\r\n  renderChildren(inner, key) {\r\n    const { cols } = this.props;\r\n\r\n    if (inner === null) {\r\n      return inner;\r\n    }\r\n\r\n    if (inner.props.block) {\r\n      let ele;\r\n      if (inner.props.labelCol) {\r\n        ele = inner;\r\n      } else {\r\n        //todo 强制指定样式, 计算宽度\r\n        const labelSpan = Math.ceil(24 / cols / 3);\r\n        ele = React.cloneElement(inner, {\r\n          labelCol: { span: labelSpan },\r\n          wrapperCol: { span: 24 - labelSpan },\r\n        });\r\n      }\r\n      return (\r\n        <Col span={24} key={key}>\r\n          {/*labelCol={{ span: 4 }}*/}\r\n          {/*wrapperCol={{ span: 20 }}*/}\r\n          {ele}\r\n        </Col>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col span={24 / cols} key={key}>\r\n          {inner}\r\n        </Col>\r\n      );\r\n    }\r\n  }\r\n\r\n  warpItems() {\r\n    const { children } = this.props;\r\n\r\n    return React.Children.map(children, (item, idx) => {\r\n      // 如果是nowarp对象,直接吐出\r\n      if (item.props.nowarp === true) {\r\n        return item;\r\n      }\r\n\r\n      // 如果是fragment包装子结点\r\n      if (item.type === Symbol.for(\"react.fragment\")) {\r\n        return React.Children.map(item.props.children, (inner, idxInner) => {\r\n          return this.renderChildren(inner, `col_${idx}_${idxInner}`);\r\n        });\r\n      }\r\n\r\n      if (_.isArray(item)) {\r\n        return item.map((inner, idxInner) => {\r\n          return this.renderChildren(inner, `col_${idx}_${idxInner}`);\r\n        });\r\n      } else {\r\n        return this.renderChildren(item, `col_${idx}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { cols, children, compact, gutter } = this.props;\r\n    const className = compact\r\n      ? \"antd-x-compact-form antd-x-form\"\r\n      : \"antd-x-form\";\r\n    // let items;\r\n\r\n    const items = this.warpItems();\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Row gutter={gutter}>{items}</Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nFormLayout.propTypes = {\r\n  /**\r\n   * 布局展示几行\r\n   */\r\n  cols: PropTypes.number,\r\n\r\n  /**\r\n   * 是否紧缩布局\r\n   */\r\n  compact: PropTypes.bool,\r\n\r\n  /**\r\n   * Row  gutter\r\n   */\r\n  gutter: PropTypes.number,\r\n};\r\n"],"file":"FormLayout.js"}