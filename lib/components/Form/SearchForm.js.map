{"version":3,"sources":["../../../src/components/Form/SearchForm.js"],"names":["SearchForm","props","context","formRef","React","createRef","state","expand","action","onSearch","console","warn","current","getFieldsValue","invokeSearch","resetFields","onReset","nextExpand","setState","children","showItem","slice","min","extendText","expandText","collapseText","text","length","icon","marginRight","fontSize","toggle","bind","queryText","resetText","cols","compact","gutter","actions","style","renderItems","renderExtend","handleSearch","handleReset","PureComponent","propTypes","PropTypes","func","isRequired","number","string","bool","any"],"mappings":"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","sourcesContent":["/**\r\n * SearchForm\r\n * Created by pengj on 2018-4-29.\r\n */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Col, Form, Icon } from \"antd\";\r\nimport isFunction from \"lodash/isFunction\";\r\nimport isArray from \"lodash/isArray\";\r\nimport {\r\n  UpSquareOutlined,\r\n  DownSquareOutlined,\r\n  SearchOutlined,\r\n  ReloadOutlined,\r\n} from \"@ant-design/icons\";\r\nimport FormLayout from \"./FormLayout\";\r\n\r\n/**\r\n * 自动布局查询表单,  可以通过min调整, 提供高级搜索能力\r\n *\r\n * ```\r\n * <SearchForm cols={4} min={2} actions={ <Button>测试</Button> } form={form} onSearch={(data) => {console.log(data);}}>\r\n *   {this.renderItem1()}\r\n * </SearchForm>\r\n * ```\r\n */\r\nexport default class SearchForm extends React.PureComponent {\r\n  static defaultProps = {\r\n    min: 999,\r\n    queryText: \"查询\",\r\n    resetText: \"清除\",\r\n    expandText: \"更多条件\",\r\n    collapseText: \"简化条件\",\r\n    compact: true,\r\n    cols: 3,\r\n  };\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.formRef = React.createRef();\r\n\r\n    // if (!this.form) {\r\n    //   console.warn(\"props.form must be return from  Form.useForm\");\r\n    // }\r\n\r\n    this.state = {\r\n      expand: false,\r\n    };\r\n  }\r\n\r\n  invokeSearch(action) {\r\n    const { onSearch } = this.props;\r\n\r\n    if (!isFunction(onSearch)) {\r\n      console.warn(\"onSearch must be function\");\r\n    } else {\r\n      onSearch(this.formRef.current.getFieldsValue(), { action });\r\n    }\r\n  }\r\n\r\n  handleSearch() {\r\n    this.invokeSearch(\"SEARCH\");\r\n  }\r\n\r\n  handleReset() {\r\n    this.formRef.current.resetFields();\r\n\r\n    const { onReset } = this.props;\r\n    if (isFunction(onReset)) {\r\n      onReset();\r\n    }\r\n\r\n    this.invokeSearch(\"RESET\");\r\n  }\r\n\r\n  toggle() {\r\n    const {\r\n      state: { expand },\r\n    } = this;\r\n\r\n    const nextExpand = !expand;\r\n    if (!nextExpand) {\r\n      this.formRef.current.resetFields();\r\n    }\r\n\r\n    this.setState({ expand: nextExpand });\r\n  }\r\n\r\n  renderItems() {\r\n    const { expand } = this.state;\r\n    let { children } = this.props;\r\n    if (!isArray(children)) {\r\n      children = [children];\r\n    }\r\n\r\n    let showItem = [];\r\n    if (expand) {\r\n      showItem = children;\r\n    } else {\r\n      showItem = children.slice(0, this.props.min);\r\n    }\r\n\r\n    return showItem;\r\n  }\r\n\r\n  renderExtend(expand) {\r\n    const { children, extendText, min, expandText, collapseText } = this.props;\r\n\r\n    const text = expand ? collapseText : extendText || expandText;\r\n\r\n    if (children.length > min) {\r\n      const icon = expand ? <UpSquareOutlined /> : <DownSquareOutlined />;\r\n\r\n      return (\r\n        <a\r\n          style={{ marginRight: 12, fontSize: 12 }}\r\n          onClick={this.toggle.bind(this)}\r\n        >\r\n          {text} {icon}\r\n        </a>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { expand } = this.state;\r\n    const {\r\n      queryText,\r\n      resetText,\r\n      cols,\r\n      compact,\r\n      gutter,\r\n      actions,\r\n      style,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Form className=\"antd-x-search-form\" style={style} ref={this.formRef}>\r\n        <FormLayout cols={cols} compact={compact} gutter={gutter}>\r\n          {this.renderItems()}\r\n          <Col className=\"actions\" nowarp={true}>\r\n            {this.renderExtend(expand)}\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<SearchOutlined />}\r\n              onClick={this.handleSearch.bind(this)}\r\n            >\r\n              {queryText}\r\n            </Button>\r\n            <Button\r\n              icon={<ReloadOutlined />}\r\n              onClick={this.handleReset.bind(this)}\r\n            >\r\n              {resetText}\r\n            </Button>\r\n            {actions}\r\n          </Col>\r\n        </FormLayout>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  /**\r\n   * 查询函数   (values,event:{action}) => {}, event.action 触发动作 查询(SEARCH)或者重置(RESET)\r\n   */\r\n  onSearch: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * 点击重置后触发,  会在onSearch之前执行,    重置会触发一次onSearch(空值)\r\n   */\r\n  onReset: PropTypes.func,\r\n\r\n  /**\r\n   * 精简模式下展示多少条件\r\n   */\r\n  min: PropTypes.number,\r\n\r\n  /**\r\n   * 查询按钮文字\r\n   */\r\n  queryText: PropTypes.string,\r\n\r\n  /**\r\n   * 重置按钮文字\r\n   */\r\n  resetText: PropTypes.string,\r\n\r\n  /**\r\n   * 展开按钮文字\r\n   */\r\n  expandText: PropTypes.string,\r\n\r\n  /**\r\n   * 收缩按钮文字\r\n   */\r\n  collapseText: PropTypes.string,\r\n\r\n  /**\r\n   * 布局展示几行  FormLayout cols\r\n   */\r\n  cols: PropTypes.number,\r\n\r\n  /**\r\n   * 是否紧缩布局   FormLayout compact\r\n   */\r\n  compact: PropTypes.bool,\r\n\r\n  /**\r\n   * FormLayout gutter\r\n   */\r\n  gutter: PropTypes.number,\r\n\r\n  /**\r\n   * 放置在查询按钮后的 扩展按钮\r\n   */\r\n  actions: PropTypes.any,\r\n\r\n  /**\r\n   * style\r\n   */\r\n  style: PropTypes.any,\r\n};"],"file":"SearchForm.js"}