{"version":3,"sources":["../../../src/components/View/DetailView.js"],"names":["DetailView","props","keyIdx","ele","cols","eleColSpan","colSpan","children","gutter","colEles","React","Children","map","type","Symbol","for","inner","renderCol","title","color","actions","titleSize","bgColor","header","style","backgroundColor","warpLayout","PureComponent","defaultProps","propTypes","PropTypes","any","number","string"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAGA;;;;;;;;;;;;;;IAcqBA,U;;;AA2CnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAEjB,UAAKC,MAAL,GAAc,CAAd;AAFiB;AAGlB;;;;8BAESC,G,EAAK;AAAA,UACLC,IADK,GACI,KAAKH,KADT,CACLG,IADK;;AAEb,UAAMC,aAAa,mBAAKF,GAAL,EAAU,YAAV,EAAwB,CAAxB,CAAnB;AACA,UAAMG,UAAU,KAAKF,IAAL,GAAYC,UAA5B;AACA,aACE;AAAC,iBAAD;AAAA,UAAK,MAAMC,OAAX,EAAoB,cAAa,KAAKJ,MAAL,EAAjC;AACGC;AADH,OADF;AAKD;;;iCAEY;AAAA;;AAAA,mBACuB,KAAKF,KAD5B;AAAA,mCACHM,QADG;AAAA,UACHA,QADG,mCACQ,EADR;AAAA,UACYC,MADZ,UACYA,MADZ;;AAEX,UAAMC,UAAUC,gBAAMC,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6B,UAACJ,GAAD,EAAS;AACpD,YAAIA,IAAIU,IAAJ,KAAaC,OAAOC,GAAP,CAAW,gBAAX,CAAjB,EAA+C;AAC7C,iBAAOL,gBAAMC,QAAN,CAAeC,GAAf,CAAmBT,IAAIF,KAAJ,CAAUM,QAA7B,EAAuC,UAACS,KAAD,EAAW;AACvD,mBAAO,OAAKC,SAAL,CAAeD,KAAf,CAAP;AACD,WAFM,CAAP;AAGD,SAJD,MAIO;AACL,iBAAO,OAAKC,SAAL,CAAed,GAAf,CAAP;AACD;AACF,OARe,CAAhB;AASA,aACE;AAAC,iBAAD;AAAA,UAAK,QAAQ,CAAb,EAAgB,WAAW,SAA3B;AACGM;AADH,OADF;AAKD;;;6BAEQ;AAAA,oBAC+C,KAAKR,KADpD;AAAA,UACCiB,KADD,WACCA,KADD;AAAA,UACQC,KADR,WACQA,KADR;AAAA,UACeC,OADf,WACeA,OADf;AAAA,UACwBC,SADxB,WACwBA,SADxB;AAAA,UACmCC,OADnC,WACmCA,OADnC;;AAEP,UAAMC,SAASL,QAAQ;AAAC,2BAAD;AAAA,iBAAe,EAAEC,YAAF,EAASC,gBAAT,EAAf,IAAmC,MAAMC,SAAzC;AAAqDH;AAArD,OAAR,GAAkF,IAAjG;AACA,UAAMM,QAAQ,EAACC,iBAAiBH,OAAlB,EAAd;;AAEA,aACE;AAAA;AAAA,UAAK,WAAU,oBAAf,EAAoC,OAAOE,KAA3C;AACGD,cADH;AAEG,aAAKG,UAAL;AAFH,OADF;AAMD;;;;EAxFqCC,oB;;AAAnB3B,U,CACZ4B,Y,GAAe;AACpBxB,QAAM,CADc;AAEpBI,UAAQ;AAFY,C;AADHR,U,CAMZ6B,S,GAAY;AACjB;;;AAGAX,SAAOY,oBAAUC,GAJA;;AAMjB;;;AAGA3B,QAAM0B,oBAAUE,MATC;;AAWjB;;;AAGAV,WAASQ,oBAAUG,MAdF;;AAgBjB;;;AAGAzB,UAAQsB,oBAAUE,MAnBD;;AAqBjB;;;AAGAb,SAAOW,oBAAUG,MAxBA;;AA0BjB;;;AAGAb,WAASU,oBAAUC,GA7BF;;AA+BjB;;;AAGAV,aAAWS,oBAAUG;AAlCJ,C;kBANAjC,U","file":"DetailView.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {Col, Row} from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport _get from 'lodash/get';\r\nimport PageTitle from \"../../layouts/Page/PageTitle\";\r\n\r\n\r\n/**\r\n * 信息展示视图, 通过key value模式展示, 提供布局能力\r\n *\r\n * ```html\r\n * <DetailView title={'详情展示'}>\r\n *   <AttributeLabel label={'测试'}>123123123123</AttributeLabel>\r\n *   <Fragment>\r\n *     <AttributeLabel label={'测试'} size={2}>xxxxxxxxxxxxxxxx</AttributeLabel>\r\n *     <AttributeLabel label={'测试'}>123123123123</AttributeLabel>\r\n *     <AttributeLabel label={'测试'} size={4}>123123123123</AttributeLabel>\r\n *   </Fragment>\r\n * </DetailView>\r\n * ```\r\n */\r\nexport default class DetailView extends PureComponent {\r\n  static defaultProps = {\r\n    cols: 4,\r\n    gutter: 8,\r\n  };\r\n\r\n  static propTypes = {\r\n    /**\r\n     * 详情标题, 如果没有不展示头\r\n     */\r\n    title: PropTypes.any,\r\n\r\n    /**\r\n     * 布局行数\r\n     */\r\n    cols: PropTypes.number,\r\n\r\n    /**\r\n     * 背景色\r\n     */\r\n    bgColor: PropTypes.string,\r\n\r\n    /**\r\n     * Row gutter 见:PageTitle  gutter\r\n     */\r\n    gutter: PropTypes.number,\r\n\r\n    /**\r\n     * 标题头的颜色 见:PageTitle color\r\n     */\r\n    color: PropTypes.string,\r\n\r\n    /**\r\n     * 标题操作 见:PageTitle actions\r\n     */\r\n    actions: PropTypes.any,\r\n\r\n    /**\r\n     * 标题大小, 见: PageTitle size\r\n     */\r\n    titleSize: PropTypes.string\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.keyIdx = 1;\r\n  }\r\n\r\n  renderCol(ele) {\r\n    const { cols } = this.props;\r\n    const eleColSpan = _get(ele, 'props.size', 1);\r\n    const colSpan = 24 / cols * eleColSpan;\r\n    return (\r\n      <Col span={colSpan} key={`col_${ this.keyIdx++ }`}>\r\n        {ele}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  warpLayout() {\r\n    const { children = [], gutter } = this.props;\r\n    const colEles = React.Children.map(children, (ele) => {\r\n      if (ele.type === Symbol.for('react.fragment')) {\r\n        return React.Children.map(ele.props.children, (inner) => {\r\n          return this.renderCol(inner);\r\n        });\r\n      } else {\r\n        return this.renderCol(ele);\r\n      }\r\n    });\r\n    return (\r\n      <Row gutter={0} className={'content'}>\r\n        {colEles}\r\n      </Row>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { title, color, actions, titleSize, bgColor } = this.props;\r\n    const header = title ? <PageTitle {...{ color, actions }} size={titleSize}>{title}</PageTitle> : null;\r\n    const style = {backgroundColor :bgColor };\r\n\r\n    return (\r\n      <div className='antd-x-detail-view' style={style}>\r\n        {header}\r\n        {this.warpLayout()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}