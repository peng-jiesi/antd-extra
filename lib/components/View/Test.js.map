{"version":3,"sources":["../../../src/components/View/Test.js"],"names":["MultiText","Component","propTypes","value","PropTypes","string","label","onChange","func","defaultProps","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;AAEA;;;IAGqBA,S;;;;;;;;;;;;6BACV;AACP,0BAAO,4DAAP;AACD;;;EAHoCC,gB;;;AAMvCD,SAAS,CAACE,SAAV,GAAsB;AACpB;;;;AAIAC,EAAAA,KAAK,EAAEC,sBAAUC,MALG;;AAOpB;;;AAGAC,EAAAA,KAAK,EAAEF,sBAAUC,MAVG;;AAYpB;;;;AAIAE,EAAAA,QAAQ,EAAEH,sBAAUI;AAhBA,CAAtB;AAkBAR,SAAS,CAACS,YAAV,GAAyB;AACvBH,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAGAI,OAAO,CAACC,GAAR,CAAYX,SAAZ","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n/**\r\n * adsasdas\r\n */\r\nexport default class MultiText extends Component {\r\n  render() {\r\n    return <div>123123123123</div>;\r\n  }\r\n}\r\n\r\nMultiText.propTypes = {\r\n  /**\r\n   * String representing the value of this component.\r\n   * Should be a JSON encoded array of each element\r\n   */\r\n  value: PropTypes.string,\r\n\r\n  /**\r\n   * The label for the data that this component represents\r\n   */\r\n  label: PropTypes.string,\r\n\r\n  /**\r\n   * Fired when the data of this component changes.\r\n   * Will be given one argument which is a string\r\n   */\r\n  onChange: PropTypes.func,\r\n};\r\nMultiText.defaultProps = {\r\n  label: null,\r\n};\r\nconsole.log(MultiText);\r\n"],"file":"Test.js"}